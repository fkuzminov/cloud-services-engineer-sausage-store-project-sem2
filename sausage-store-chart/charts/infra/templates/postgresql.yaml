apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  annotations:
    helm.sh/hook-weight: "-5"
spec:
  serviceName: postgresql
  replicas: {{ .Values.postgresql.replicas | default 1 }}
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: {{ .Values.postgresql.image }}
        envFrom:
          - configMapRef:
              name: postgresql-conf
        ports:
        - containerPort: {{ .Values.postgresql.containerPort }}
        resources:
          requests:
            memory: {{ .Values.postgresql.resources.requests.memory | default "256Mi" }}
            cpu: {{ .Values.postgresql.resources.requests.cpu | default "250m" }}
          limits:
            memory: {{ .Values.postgresql.resources.limits.memory | default "512Mi" }}
            cpu: {{ .Values.postgresql.resources.limits.cpu | default "500m" }}
        volumeMounts:
        - name: {{ .Values.postgresql.volumeName | default "mongodb-data" }}
          mountPath: /var/lib/postgresql/data
        livenessProbe: &postgresql_health_check
          exec:
            command:
              - pg_isready
              - -U
              - {{ .Values.postgresql.env.POSTGRES_USER }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          <<: *postgresql_health_check
          initialDelaySeconds: 5
          periodSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: postgresql-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.postgresql.storage | default "2Gi" }}
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  labels:
    app: postgresql
spec:
  ports:
  - port: {{ .Values.postgresql.containerPort }}
    targetPort: {{ .Values.postgresql.containerPort }}
  selector:
    app: postgresql
  clusterIP: None
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-conf
data:
  POSTGRES_DB: {{ .Values.postgresql.env.POSTGRES_DB }}
  POSTGRES_USER: {{ .Values.postgresql.env.POSTGRES_USER }}
  POSTGRES_PASSWORD: {{ .Values.postgresql.env.POSTGRES_PASSWORD }}
  PGDATA: /var/lib/postgresql/data/pgdata

