---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-{{ .Chart.Name }}"
  namespace: "{{ .Release.Namespace }}"
  labels:
    app.kubernetes.io/name: "{{ .Chart.Name }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: "{{ .Chart.Name }}"
    app.kubernetes.io/part-of: "{{ .Release.Name }}"
spec:
  strategy:
    type: "{{ .Values.deployment.strategyType }}"
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-{{ .Chart.Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-{{ .Chart.Name }}"
    spec:
      containers:
        - name: "{{ .Chart.Name }}"
          image: "{{ .Values.deployment.image }}"
          imagePullPolicy: "{{ .Values.global.imagePullPolicy }}"
          ports:
            - containerPort: {{ .Values.deployment.containerPort }}
          env:
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-{{ .Chart.Name }}-conf"
                  key: port
            - name: DB
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-{{ .Chart.Name }}-secret"
                  key: db
          resources:
            requests:
              memory: "{{ .Values.deployment.requestMemory }}"
              cpu: "{{ .Values.deployment.requestCpu }}"
            limits:
              memory: "{{ .Values.deployment.limitMemory }}"
              cpu: "{{ .Values.deployment.limitCpu }}"
