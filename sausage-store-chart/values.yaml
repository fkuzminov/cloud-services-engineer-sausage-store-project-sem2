global:
  imagePullPolicy: Always
  mongodb:
    username: root
    password: rootpassword
  postgresql:
    username: store
    password: storepassword
    db: sausage-store
  dockerhub: teodorriyce

frontend:
  replicas: 1
  revisionHistoryLimit: 15
  strategy:
    type: Recreate
  service:
    port: 80
  ingress:
    host: YOUR_STUDENT_HOSTNAME.students-projects.ru # Корректный домен будет указан в задании
    path: /
    pathType: Prefix
  containerPort: 80
  image: teodorriyce/sausage-frontend:latest
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "1"
  nginxConf: nginx.conf

backend:
  annotations:
    path: /actuator/prometheus
    port: "8080"
    scrape: "true"
  env:
    postgresUri: jdbc:postgresql://postgresql:5432/sausage-store
    postgresUser: store
    postgresPassword: storepassword
    reportPath: /logs/reports
    logPath: /logs
  service:
    port: 8080
  revisionHistoryLimit: 15
  replicas: 1
  strategy:
    type: RollingUpdate
  image: YOUR_DOCKERHUB/sausage-backend:latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "1"
  containerPort: 8080
  livenessProbe:
  ### Опишите LivenessProbe для бэкенда
  vpa:
  ### Опишите VPA для бэкенда

backend-report:
  config:
    port: &brp 8081
  deployment:
    replicas: 1
    strategyType: Recreate
    image: "teodorriyce/sausage-backend-report:latest"
    containerPort: *brp
    requestCpu: 100m
    requestMemory: 128Mi
    limitCpu: 250m
    limitMemory: 256Mi
  hpa:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 75
  secret:
    connectionString: "mongodb://root:password@mongodb:27017"
  service:
    type: ClusterIP
    port: *brp

infra:
  # MongoDB configuration
  mongodb:
    # Container settings
    replicas: 1
    image: mongo:7.0
    containerPort: 27017
    # Resource limits and requests
    resources:
      requests:
        memory: 128Mi
        cpu: 50m
      limits:
        memory: 256Mi
        cpu: 100m
    # Volume settings
    volumeName: mongodb-data
    storage: 1Gi
    # Environment variables for MongoDB initialization
    env:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password

  # PostgreSQL configuration
  postgresql:
    # Container settings
    replicas: 1
    image: postgres:15
    containerPort: 5432
    # Resource limits and requests
    resources:
      requests:
        memory: 256Mi
        cpu: 250m
      limits:
        memory: 512Mi
        cpu: 500m
    # Volume settings
    volumeName: postgresql-data
    storage: 2Gi
    # Environment variables for PostgreSQL initialization
    env:
      POSTGRES_DB: sausage-store
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
